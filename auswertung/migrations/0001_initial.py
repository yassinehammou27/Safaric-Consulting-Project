# Generated by Django 3.1.3 on 2021-02-05 18:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aktionstyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[4.1] Aktionstypen',
            },
        ),
        migrations.CreateModel(
            name='Artikelart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[4.5] Artikelarten',
            },
        ),
        migrations.CreateModel(
            name='Auslobungnormalpreis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Auslobung Normalpreis',
                'verbose_name_plural': '[4.3] Auslobung Normalpreise',
            },
        ),
        migrations.CreateModel(
            name='Branche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[2.3] Branchen',
            },
        ),
        migrations.CreateModel(
            name='customPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': [('view_handzettelliste', 'Zugang zur Handzettelliste'), ('view_ergebnisse', 'Zugang zu Ergebnissen'), ('view_auswerten', 'Zugang zum Auswertungsbereich'), ('view_import', 'Zugang zur Importseite')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Haendler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('land', models.CharField(blank=True, max_length=100, null=True)),
                ('frequenzhandzettel', models.CharField(blank=True, max_length=100, null=True)),
                ('subkategorie', models.CharField(blank=True, max_length=100, null=True)),
                ('branche', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auswertung.branche')),
            ],
            options={
                'verbose_name_plural': '[2.1] HÃ¤ndler',
            },
        ),
        migrations.CreateModel(
            name='Handzettel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jahr', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2050)])),
                ('seitenanzahl', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('status', models.PositiveIntegerField(default=0)),
                ('SeitenAusgewertet', models.BooleanField(default=False)),
                ('artikelAnzahl', models.PositiveIntegerField(default=0)),
                ('fertigeArtikel', models.PositiveIntegerField(default=0)),
                ('letzteSeite', models.PositiveIntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('kw', models.PositiveIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(53)])),
                ('bemerkung', models.CharField(blank=True, max_length=999, null=True)),
                ('handzetteldatei', models.FileField(blank=True, null=True, upload_to='')),
                ('haendler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auswertung.haendler')),
            ],
            options={
                'verbose_name_plural': '[1.1] Handzettel',
            },
        ),
        migrations.CreateModel(
            name='Kategorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(default='aktiv', max_length=100)),
            ],
            options={
                'verbose_name': 'Kategorie Seite',
                'verbose_name_plural': '[3.1] Seitenkategorien ',
            },
        ),
        migrations.CreateModel(
            name='KategorieArtikel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(default='aktiv', max_length=100)),
            ],
            options={
                'verbose_name': 'Kategorie Artikel',
                'verbose_name_plural': '[4.6] Artikelkategorien ',
            },
        ),
        migrations.CreateModel(
            name='Loyalty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[4.2] Loyalty',
            },
        ),
        migrations.CreateModel(
            name='Oberkategorie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(default='aktiv', max_length=100)),
            ],
            options={
                'verbose_name': 'Oberkategorie',
                'verbose_name_plural': '[3.3] Oberkategorien ',
            },
        ),
        migrations.CreateModel(
            name='Referenzartikel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[4.4] Referenzartikel',
            },
        ),
        migrations.CreateModel(
            name='Seitentyp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': '[3.2] Seitentypen',
            },
        ),
        migrations.CreateModel(
            name='Unternehmensgruppe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('branche', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auswertung.branche')),
            ],
            options={
                'verbose_name_plural': '[2.2] Unternehmensgruppen',
            },
        ),
        migrations.CreateModel(
            name='Seite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seitenzahl', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('themenwelt', models.CharField(default='keine Themenwelt', max_length=100)),
                ('artikelanzahl', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('artikelanzahlnichthk', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('bild', models.ImageField(blank=True, default=None, null=True, upload_to='')),
                ('status', models.PositiveIntegerField(default=0)),
                ('kategorisiert', models.BooleanField(default=False)),
                ('artikelerstellt', models.BooleanField(default=False)),
                ('bemerkung', models.CharField(blank=True, max_length=999, null=True)),
                ('handzettel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auswertung.handzettel')),
                ('hauptkategorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.kategorie')),
                ('oberkategorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.oberkategorie')),
                ('seitentyp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.seitentyp')),
            ],
            options={
                'verbose_name_plural': '[1.2] Seiten',
            },
        ),
        migrations.AddField(
            model_name='haendler',
            name='unternehmensgruppe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='auswertung.unternehmensgruppe'),
        ),
        migrations.CreateModel(
            name='ArtikelDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auswertung.kategorieartikel')),
            ],
            options={
                'verbose_name': 'Artikel-Dictionary',
                'verbose_name_plural': '[4.7] Artikel-Dictionary',
            },
        ),
        migrations.CreateModel(
            name='Artikel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artikelnummer', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('preis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('seitenbereich', models.CharField(blank=True, max_length=200, null=True)),
                ('coupon', models.BooleanField(default=False)),
                ('heroartikel', models.BooleanField(default=False)),
                ('bemerkung', models.CharField(blank=True, max_length=999, null=True)),
                ('startpunkt_x', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('startpunkt_y', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('endpunkt_x', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('endpunkt_y', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('fertig', models.BooleanField(default=False)),
                ('ocr_output', models.TextField(blank=True, null=True)),
                ('aktionsmechanik', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.aktionstyp')),
                ('artikelart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.artikelart')),
                ('auslobungnormalpreis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.auslobungnormalpreis')),
                ('kategorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.kategorieartikel')),
                ('loyalty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.loyalty')),
                ('oberkategorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.oberkategorie')),
                ('referenzartikel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='auswertung.referenzartikel')),
                ('seite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auswertung.seite')),
            ],
            options={
                'verbose_name_plural': '[1.3] Artikel',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('branchen', models.ManyToManyField(blank=True, to='auswertung.Branche')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('haendler', models.ManyToManyField(blank=True, to='auswertung.Haendler')),
                ('unternehmensgruppe', models.ManyToManyField(blank=True, to='auswertung.Unternehmensgruppe')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
